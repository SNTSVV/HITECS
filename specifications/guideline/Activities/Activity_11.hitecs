namespace Activities;
private import Component::*;

activity Activity_11(in Comp9:Component_9,in Comp2:Component_2,in Comp8:Component_8, in Comp4 : Component_4, in Comp7 : Component_7 ,in ctx:Context, in fml : Formula){
      //@SimTime("Comp4_reset_record", "uniform");
      Comp4.reset();
      assert (Comp4.att1 == 1);
      assert (Comp4.att2 == -80);
      assert (Comp4.att3 == model.iot.component.Component_4.enum1.OFF);
      //@SimTime("Comp4_preset_record", "uniform");
      Comp4.preset();
      assert (Comp4.att1 == 1);
      assert (Comp4.att2 == -80);
      assert (Comp4.att3 == model.iot.component.Component_4.enum1.OFF);
      //@SimTime("Comp4_operation_4_record", "uniform");
      Comp4.operation_4(Component_4.enum3.GDEL);
      assert (Comp4.att5 == Component_4.enum3.GDEL);
      //@SimTime("Comp4_operation_7_record", "uniform");
      Comp4.operation_7(((1);
      assert (Comp4.att6 == 1);
      //@SimTime("Comp4_operation_6_record", "uniform");
      Comp4.operation_6(1);
      assert (Comp4.att7 == 1);
      //@SimTime("Comp4_operation_1_record", "uniform");
      Comp4.operation_1(Component_4.enum2.SCALAR);
      assert (Comp4.att4 == Component_4.enum2.SCALAR);
      //@SimTime("Comp4_operation_4_record", "uniform");
      Comp4.operation_4(Component_4.enum3.GDEL);
      assert (Comp4.att5 == Component_4.enum3.GDEL);
      //@SimTime("Comp4_operation_10_record", "uniform");
      Comp4.setoperation_16(fml.operation_16());
      assert (Comp4.att8 == fml.operation_16());
      //@SimTime("Comp4_operation_11_record", "uniform");
      Comp4.setoperation_17(fml.operation_17());
      assert (Comp4.att9 == fml.operation_17());
      //@SimTime("Comp4_operation_12_record", "uniform");
      Comp4.operation_12(fml.Step64());
      assert (Comp4.att10 == fml.Step64());
      //@SimTime("Comp4_operation_13_record", "uniform");
      Comp4.operation_13(1);
      assert (Comp4.att11 == 1);
      //@SimTime("Comp4_operation_15_record", "uniform");
      Comp4.operation_15(Component_4.enum1.ON);
      assert (Comp4.att12 == Component_4.enum1.ON);
      //@SimTime("Comp4_operation_14_record", "uniform");
      Comp4.operation_14(1);
      assert (Comp4.att13 == 1);
      //@SimTime("Comp4_operation_16_record", "uniform");
      Comp4.operation_16(10);
      assert (Comp4.att14 == 10);
      //@SimTime("Comp4_operation_17_record", "uniform");
      Comp4.operation_17(601);
      assert (Comp4.att15 == 601);
      //@SimTime("Comp4_operation_18_record", "uniform");
      Comp4.operation_18(Component_4.enum1.ON);
      assert (Comp4.att16 == Component_4.enum1.ON);
      //@SimTime("Comp4_operation_19_record", "uniform");
      Comp4.operation_19(Component_4.enum1.ON);
      assert (Comp4.att17 == Component_4.enum1.ON);
      //@SimTime("Comp4_operation_22_record", "uniform");
      Comp4.setoperation_18(fml.operation_18());
      assert (Comp4.att18 == fml.operation_18());
      //@SimTime("Comp7_operation_1_record", "uniform");
      Comp7.operation_1(Util.operation_1(Comp2.operation_5()));
      assert (Comp7.att1 == Util.operation_2(Comp2.att4));
      //@SimTime("Comp4_operation_25_record", "uniform");
      Comp4.operation_25(Component_4.enum1.ON);
      assert (Comp4.att3 == Component_4.enum1.ON);
      //@SimTime("Comp4_operation_25_record", "uniform");
      Comp4.operation_25(Component_4.enum1.OFF);
      assert (Comp4.att3 == Component_4.enum1.OFF);

        }
